[tool.poetry]
name = "pychamber"
version = "0.0.1"
description = "Run anechoic chamber experiments from Python!"
authors = ["Bailey Campbell <baileycampbell1990@gmail.com>"]
repository = "https://github.com/pychamber/pychamber"
documentation = "https://pychamber.github.io/pychamber/"
readme = "README.md"
packages = [{ include = "pychamber" }]

[tool.poetry.dependencies]
python = ">=3.8,<3.12.0"
numpy = "^1.24.2"
platformdirs = "^3.0.0"
pyserial = "^3.5"
pyqtgraph = "^0.13.1"
quantiphy = "^2.19"
qtawesome = "^1.2.2"
pytest-qt = "^4.2.0"
pyvisa = "^1.13.0"
pyvisa-py = "^0.6.2"
psutil = "^5.9.4"
zeroconf = "^0.47.3"
qtwidgets = "^1.1"
PySide6 = "6.4.2"
# scikit-rf = "^0.26.0"
scikit-rf = { git = "https://github.com/cafeclimber/scikit-rf.git", branch = "vi" }
QtPy = "^2.3.1"
QDarkStyle = "^3.1"
PyOpenGL = "^3.1.6"
rich = "^13.3.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
mypy = "^0.981"
pre-commit = "^2.20.0"
tox = "^3.25.1"
pytest-mock = "^3.10.0"
dummyserial = "^1.0.0"
ruff = "^0.0.257"
pyinstaller = "^5.9.0"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^8.5.10"
mkdocstrings = { extras = ["python"], version = "^0.19.0" }

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py311']
preview = true

[tool.mypy]
files = ["pychamber"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.ruff]
target-version = "py311"
line-length = 120
fix = true
select = [
  # flake8-2020
  "YTT",
  # flake8-bandit
  "S",
  # flake8-bugbear
  "B",
  # flake8-builtins
  "A",
  # flake8-comprehensions
  "C4",
  # flake8-debugger
  "T10",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  "W",
  # pyflakes
  "F",
  # pygrep-hooks
  "PGH",
  # pyupgrade
  "UP",
  # ruff
  "RUF",
  # tryceratops
  "TRY",
]
ignore = [
  # LineTooLong
  "E501",
  # DoNotAssignLambda
  "E731",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
"test_*.py" = ["S101"]
"__init__.py" = ["F401"]

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["pychamber"]
