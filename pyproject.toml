[tool]
[tool.poetry]
name = "pychamber"
version = "0.1.0"
homepage = "https://github.com/pychamber/pychamber"
description = "Python Package to Control PSU Anechoic Chamber."
authors = ["Bailey Campbell <baileycampbell@psu.edu>"]
readme = "README.md"
license = "MIT"
classifiers = [
    'Development Status :: 3 - Alpha',
    'Intended Audience :: Developers',
    'Natural Language :: English',
]
packages = [{ include = "pychamber" }, { include = "tests", format = "sdist" }]

[tool.poetry.dependencies]
python = ">=3.8,<3.11"

black = { version = "^22.3.0", optional = true }
isort = { version = "^5.8.0", optional = true }
flake8 = { version = "^3.9.2", optional = true }
flake8-docstrings = { version = "^1.6.0", optional = true }
mypy = { version = "^0.900", optional = true }
pytest = { version = "^6.2.4", optional = true }
pytest-cov = { version = "^2.12.0", optional = true }
tox = { version = "^3.20.1", optional = true }
virtualenv = { version = "^20.2.2", optional = true }
mkdocs = { version = "^1.3.0", optional = true }
twine = { version = "^3.3.0", optional = true }
pre-commit = { version = "^2.12.0", optional = true }
bump2version = { version = "^1.0.1", optional = true }
matplotlib = "^3.5.1"
numpy = "^1.22.3"
scikit-rf = {path = "../scikit-rf", extras = ["vi"] }
pyserial = "^3.5"
omegaconf = "^2.1.1"
types-pkg_resources = { version = "^0.1.3", optional = true }
PyQt5 = "^5.15.6"
cloudpickle = "^2.0.0"
quantiphy = "^2.17.0"
pyqtconsole = "^1.2.2"
mkdocs-material = "^8.2.15"
mkdocs-include-markdown-plugin = "^3.5.1"
mkdocstrings = { version = "^0.19.0", extras = ["python"], optional = true }
mkdocs-gen-files = { version = "^0.3.5", optional = true }
mkdocs-literate-nav = { version = "^0.4.1", optional = true }
mkdocs-section-index = { version = "^0.3.4", optional = true }
pyinstaller = { version = "^5.3", optional = true }
qtwidgets = "^0.18"
pyqtgraph = "^0.12.4"
vermin = { version = "^1.4.2", optional = true }
pyinstaller-hooks-contrib = { version = "^2022.10", optional = true }
tk = { version = "^0.1.0", optional = true }
QDarkStyle = "^3.1"
aquarel = "^0.0.4"
QtAwesome = "^1.1.1"
openpyxl = "^3.1.2"


[tool.poetry.extras]
test = ["pytest", "flake8", "flake8-docstrings", "pytest-cov", "vermin"]

dev = [
    "tox",
    "black",
    "isort",
    "mypy",
    "pre-commit",
    "virtualenv",
    "pip",
    "twine",
    "toml",
    "tk",
    "bump2version",
    "types-pkg_resources",
    "pyinstaller",
    "pyinstaller-hooks-contrib",
]

doc = [
    "mkdocs",
    "mkdocs-include-markdown-plugin",
    "mkdocs-material",
    "mkdocstrings",
    "mkdocs-material-extension",
    "mkdocs-autorefs",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-section-index",
]

[tool.poetry.dev-dependencies]
PyQt5-stubs = "^5.15.2"
types-pkg-resources = "^0.1.3"
black = "^22.3.0"

[tool.black]
line-length = 90
skip-string-normalization = true
target-version = ['py38', 'py39', 'py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 90
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
